{
  parserClass="com.github.dragonhatcher.natexlangplugin.language.parser.NatexParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Natex"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.dragonhatcher.natexlangplugin.language.psi"
  psiImplPackage="com.github.dragonhatcher.natexlangplugin.language.psi.impl"

  elementTypeHolderClass="com.github.dragonhatcher.natexlangplugin.language.psi.NatexTypes"
  elementTypeClass="com.github.dragonhatcher.natexlangplugin.language.psi.NatexElementType"
  tokenTypeClass="com.github.dragonhatcher.natexlangplugin.language.psi.NatexTokenType"
}

natexFile ::= term (","? " "? term)*

private term ::= optional | kleene_star | kleene_plus | non_kleene_term
private non_kleene_term ::= flexible_sequence | rigid_sequence | conjunction | disjunction | negation | REGEX | reference | assignment | macro | LITERAL | SYMBOL

flexible_sequence ::= "[" " "? term (","? " "? term)* "]"
rigid_sequence ::= "[!" " "? term (","? " "? term)* "]"
conjunction ::= "<" term (","? " "? term)* ">"
disjunction ::= "{" term (","? " "? term)* "}"
optional ::= non_kleene_term "?"
kleene_star ::= non_kleene_term "*"
kleene_plus ::= non_kleene_term "+"
negation ::= "-" term
reference ::= "$" SYMBOL
assignment ::= "$" SYMBOL "=" term
macro ::= "#" SYMBOL ( "(" macro_arg? (","? " "? macro_arg)* ")" )?
macro_arg ::= MACRO_ARG_STRING | MACRO_LITERAL | macro
x ::= PUNCUATION